# mysite_nginx.conf

# the upstream component nginx needs to connect to
upstream django {
    server unix:/home/docker/code/app.sock; # for a file socket
    # server 127.0.0.1:8001; # for a web port socket (we'll use this first)
    }

server {
  server_name .smenu.es;
  rewrite ^ http://smenudigital.com$request_uri? permanent;
}

server {
  server_name .smenudigital.eu;
  rewrite ^ http://smenudigital.com$request_uri? permanent;
}

server {
  server_name .smenudigital.es;
  rewrite ^ http://smenudigital.com$request_uri? permanent;
}

server {
    server_name  www.smenudigital.com;
    rewrite ^(.*) http://smenudigital.com$1 permanent;
}

# configuration of the server
server {
    # the port your site will be served on, default_server indicates that this server block
    # is the block to use if no blocks match the server_name
    listen      80 default_server;
    
    # the domain name it will serve for
    server_name smenudigital.com; # substitute your machine's IP address or FQDN
    charset     utf-8;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    # Django media
    #location /media  {
    #    alias /home/docker/persistent/media;  # your Django project's media files - amend as required
    #}

    location /static {
        alias /home/docker/code/app/smenu/static; # your Django project's static files - amend as required
    }
    
    location / {
        try_files $uri @prerender;
    }

    location @prerender {
        #proxy_set_header X-Prerender-Token YOUR_TOKEN;
        expires -1;
#        add_header Cache-Control "no-cache";No cal ho posa automatic
        include     /home/docker/code/uwsgi_params;

        set $prerender 0;
        if ($http_user_agent ~* "baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|googlebot") {
            #set $prerender 1;
            set $prerender 0;
        }
        if ($args ~ "_escaped_fragment_") {
            #set $prerender 1;
            set $prerender 0;
        }
        if ($http_user_agent ~ "Prerender") {
            set $prerender 0;
        }
        if ($uri ~ "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent)") {
            set $prerender 0;
        }

        #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
        resolver 8.8.8.8;

        if ($prerender = 1) {

            #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
            set $prerender "<PRERENDER_SERVER>:<PRERENDER_PORT>";
            rewrite .* /$scheme://$host$request_uri? break;
            proxy_pass http://$prerender;
        }
        if ($prerender = 0) {
            uwsgi_pass  django;
        }
    }
   
 
}
